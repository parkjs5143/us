{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\us\\\\frontend\\\\src\\\\UserComponents\\\\mainMap.jsx\",\n    _s = $RefreshSig$();\n\n/* global kakao */\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapContainer = idx => {\n  _s();\n\n  const {\n    kakao\n  } = window;\n  const [myPosition, setMyPosition] = useState([]); // 내 위치 불러오기\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      // GPS를 지원하면\n      navigator.geolocation.getCurrentPosition(function (position) {\n        // alert(position.coords.latitude + ' ' + position.coords.longitude);\n        setMyPosition(position.coords);\n      }, function (error) {\n        console.error(error);\n      }, {\n        enableHighAccuracy: true,\n        maximumAge: 0,\n        timeout: Infinity\n      });\n    } else {\n      alert('GPS를 지원하지 않습니다');\n    }\n  }\n\n  getLocation();\n  console.log(myPosition);\n  useEffect(() => {\n    const container = document.getElementById('map');\n    const options = {\n      center: new kakao.maps.LatLng(myPosition.latitude, myPosition.longitude),\n      level: 3\n    }; // map\n\n    const map = new kakao.maps.Map(container, options); // 마커를 표시할 위치와 title 객체 배열\n\n    var positions = [{\n      title: '정순',\n      latlng: new kakao.maps.LatLng(myPosition.latitude, myPosition.longitude),\n      image: \"img/marker_soon.png\"\n    }, {\n      title: '영범',\n      latlng: new kakao.maps.LatLng(37.53050019531031, 126.72251599828131),\n      image: \"img/marker_defalut.png\"\n    }, {\n      title: '미정',\n      latlng: new kakao.maps.LatLng(37.3582321773491, 126.93296899827823),\n      image: \"img/marker_mee.png\"\n    }, {\n      title: '재성',\n      latlng: new kakao.maps.LatLng(37.566348088940565, 127.04295426944607),\n      image: \"img/marker_sorry.png\"\n    }, {\n      title: '서영',\n      latlng: new kakao.maps.LatLng(37.503290447218596, 126.94776267685054),\n      image: \"img/marker_defalut.png\"\n    }, {\n      title: '소민',\n      latlng: new kakao.maps.LatLng(36.99128209052405, 127.08492735409203),\n      image: \"img/marker_defalut.png\"\n    }, {\n      title: '윤정',\n      latlng: new kakao.maps.LatLng(37.14590120049749, 127.0672146596489),\n      image: \"img/marker_defalut.png\"\n    }]; // 마커를 생성\n\n    for (var i = 0; i < positions.length; i++) {\n      // 마커 이미지의 이미지 크기 입니다\n      var imageSize = new kakao.maps.Size(68, 70); // 마커 이미지를 생성합니다\n\n      var markerImage = new kakao.maps.MarkerImage(positions[i].image, imageSize); // 마커를 생성합니다\n\n      var marker = new kakao.maps.Marker({\n        map: map,\n        // 마커를 표시할 지도\n        position: positions[i].latlng,\n        // 마커를 표시할 위치\n        title: positions[i].title,\n        // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n        image: markerImage,\n        // 마커 이미지 \n        clickable: true // 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다\n\n      }); // 마커에 클릭이벤트를 등록합니다\n\n      kakao.maps.event.addListener(marker, 'click', function () {\n        window.location.href = '/main';\n      });\n    } // 마커를 지도 위에 표시\n\n\n    marker.setMap(map); // 지도에 컨트롤 추가\n\n    var control = new kakao.maps.ZoomControl();\n    map.addControl(control, kakao.maps.ControlPosition.TOPRIGHT);\n  }, [myPosition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100rem',\n      height: '50rem',\n      marginBottom: '8rem'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapContainer, \"c7kdrYJlPfh9a2yJWpSXC2hVgGs=\");\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/project/us/frontend/src/UserComponents/mainMap.jsx"],"names":["React","useEffect","useState","MapContainer","idx","kakao","window","myPosition","setMyPosition","getLocation","navigator","geolocation","getCurrentPosition","position","coords","error","console","enableHighAccuracy","maximumAge","timeout","Infinity","alert","log","container","document","getElementById","options","center","maps","LatLng","latitude","longitude","level","map","Map","positions","title","latlng","image","i","length","imageSize","Size","markerImage","MarkerImage","marker","Marker","clickable","event","addListener","location","href","setMap","control","ZoomControl","addControl","ControlPosition","TOPRIGHT","width","height","marginBottom"],"mappings":"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","sourcesContent":["/* global kakao */\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst MapContainer = (idx) => {\r\n    const { kakao } = window;\r\n    const [myPosition, setMyPosition] = useState([]);\r\n\r\n    // 내 위치 불러오기\r\n    function getLocation() {\r\n        if (navigator.geolocation) { // GPS를 지원하면\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                // alert(position.coords.latitude + ' ' + position.coords.longitude);\r\n                setMyPosition(position.coords);\r\n            }, function(error) {\r\n                console.error(error);\r\n            }, {\r\n                enableHighAccuracy: true,\r\n                maximumAge: 0,\r\n                timeout: Infinity\r\n            });\r\n        } else {\r\n            alert('GPS를 지원하지 않습니다');\r\n        }\r\n    }\r\n    getLocation();\r\n    console.log(myPosition);\r\n\r\n    useEffect(() => {\r\n        \r\n        const container = document.getElementById('map');\r\n        const options = {\r\n            center: new kakao.maps.LatLng(myPosition.latitude, myPosition.longitude),\r\n            level: 3\r\n        };\r\n\r\n        // map\r\n        const map = new kakao.maps.Map(container, options);\r\n\r\n        // 마커를 표시할 위치와 title 객체 배열\r\n        var positions = [\r\n            {\r\n                title: '정순', \r\n                latlng: new kakao.maps.LatLng(myPosition.latitude, myPosition.longitude),\r\n                image:\"img/marker_soon.png\"\r\n            },\r\n            {\r\n                title: '영범', \r\n                latlng: new kakao.maps.LatLng(37.53050019531031, 126.72251599828131),\r\n                image:\"img/marker_defalut.png\"\r\n            },\r\n            {\r\n                title: '미정', \r\n                latlng: new kakao.maps.LatLng(37.3582321773491, 126.93296899827823),\r\n                image:\"img/marker_mee.png\"\r\n            },\r\n            {\r\n                title: '재성',\r\n                latlng: new kakao.maps.LatLng(37.566348088940565, 127.04295426944607),\r\n                image:\"img/marker_sorry.png\"\r\n            },\r\n            {\r\n                title: '서영',\r\n                latlng: new kakao.maps.LatLng(37.503290447218596, 126.94776267685054),\r\n                image:\"img/marker_defalut.png\"\r\n            },\r\n            {\r\n                title: '소민',\r\n                latlng: new kakao.maps.LatLng(36.99128209052405, 127.08492735409203),\r\n                image:\"img/marker_defalut.png\"\r\n            },\r\n            {\r\n                title: '윤정',\r\n                latlng: new kakao.maps.LatLng(37.14590120049749, 127.0672146596489),\r\n                image:\"img/marker_defalut.png\"\r\n            }\r\n        ];\r\n        \r\n        // 마커를 생성\r\n        for (var i = 0; i < positions.length; i ++) {\r\n            \r\n            // 마커 이미지의 이미지 크기 입니다\r\n            var imageSize = new kakao.maps.Size(68, 70); \r\n            \r\n            // 마커 이미지를 생성합니다\r\n            var markerImage = new kakao.maps.MarkerImage(positions[i].image, imageSize); \r\n            \r\n            // 마커를 생성합니다\r\n            var marker = new kakao.maps.Marker({\r\n                map: map, // 마커를 표시할 지도\r\n                position: positions[i].latlng, // 마커를 표시할 위치\r\n                title : positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n                image : markerImage,   // 마커 이미지 \r\n                clickable: true // 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다\r\n            });\r\n\r\n            // 마커에 클릭이벤트를 등록합니다\r\n            kakao.maps.event.addListener(marker, 'click', function() {\r\n                window.location.href = '/main';\r\n            });\r\n        }\r\n\r\n        // 마커를 지도 위에 표시\r\n        marker.setMap(map);\r\n\r\n        // 지도에 컨트롤 추가\r\n        var control = new kakao.maps.ZoomControl();\r\n        map.addControl(control, kakao.maps.ControlPosition.TOPRIGHT); \r\n        \r\n    }, [myPosition]);\r\n\r\n    return (\r\n        <div id='map' style={{\r\n            width: '100rem',\r\n            height: '50rem',\r\n            marginBottom: '8rem'\r\n        }}></div>\r\n    );\r\n}\r\n\r\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}