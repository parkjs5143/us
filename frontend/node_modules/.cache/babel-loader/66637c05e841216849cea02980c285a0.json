{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\us\\\\frontend\\\\src\\\\admin\\\\loginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst LoginForm = styled.div`\n    .login-form{width: 35rem; position:absolute; top:50%; left:50%; transform: translate(-50%, -50%);}\n    .login_logo_box{text-align: center;}\n    .login-text{margin:0; margin-top: 2.7rem; margin-bottom: 1rem; font-size:1.6rem}\n    .login-input{width: calc(100% - 3.2rem); font-size: 1.4rem; padding: 1.5rem 1.4rem; border-radius: 15px; border:1.9px solid rgb(219, 219, 219); background: none;}\n    .login-input:focus{outline: none; border:1.9px solid rgb(53, 110, 156)}\n    .login-button{padding: 1.5rem 0; font-size: 1.4rem; font-weight: bolder; color: white; width: 100%; margin: 3.5rem 0 0; border-radius: 15px; border:0; background: #4fd1c5;}\n    .login-button:disabled{ background: #dfdfdf; }\n    .login_logo{width: 10rem;}\n    .loginPage-text{text-align:center; font-size:1.2rem; color:#8d8d8d;}\n    .text{ color: red; margin:0.5rem; font-size: 1.1rem; height: 1rem; }\n`;\n_c = LoginForm;\nlet emailDisable = false;\nlet passwordDisable = false;\nconst Form = styled.div` background-color: rgb(248, 250, 252); height: 100%; position: fixed; width: 100%; overflow-y: auto;`;\n_c2 = Form;\n\nfunction Login() {\n  _s();\n\n  const formRef = /*#__PURE__*/React.createRef();\n  const inputRef = /*#__PURE__*/React.createRef(); //이메일, 비밀번호 확인\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState(''); //오류메시지 저장\n\n  const [emailMessage, setEmailMessage] = React.useState('');\n  const [passwordMessage, setPasswordMessage] = React.useState(''); //유효성 검사\n\n  const [isEmail, setIsEmail] = React.useState(false);\n  const [isPassword, setIsPassword] = React.useState(false); //이메일\n\n  const emailInput = e => {\n    e.preventDefault();\n    const regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/;\n    const email = e.target.value;\n    setEmail(email);\n\n    if (!regExp.test(email)) {\n      setEmailMessage('* 이메일 형식에 맞게 입력해주세요');\n      setIsEmail(false);\n      emailDisable = false;\n    } else {\n      setEmailMessage('');\n      setIsEmail(true);\n      emailDisable = true;\n    }\n\n    idDisabled();\n  }; //비밀번호\n\n\n  const passwordInput = e => {\n    e.preventDefault();\n    const regExp = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n    const password = e.target.value;\n    setPassword(password);\n\n    if (!regExp.test(password)) {\n      setPasswordMessage('* 비밀번호는 영어, 숫자, 특수문자 포함 8자 이상입니다.');\n      setIsPassword(false);\n      passwordDisable = false;\n    } else {\n      setPasswordMessage('');\n      setIsPassword(true);\n      passwordDisable = true;\n    }\n\n    idDisabled();\n  };\n\n  const [disabled, setDisabled] = React.useState('disabled');\n\n  const idDisabled = () => {\n    if (emailDisable === true && passwordDisable === true) {\n      setDisabled('');\n    } else {\n      setDisabled('disabled');\n    }\n  };\n\n  const login = async () => {\n    let password = document.getElementById('pwInput');\n    let idx = document.getElementById('emailInput');\n    let log = await axios.get('http://localhost:3001/admin/login?email=' + idx.value + \"&userPw=\" + password.value);\n\n    if (log.data === true) {\n      alert('환영합니다');\n      window.location.href = \"/admin/main\";\n    } else {\n      alert('이메일/비밀번호를 확인하세요');\n      window.location.href = \"/admin\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        ref: formRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login_logo_box\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/admin/us_logo.png\",\n            className: \"login_logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-text\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"emailInput\",\n          className: \"login-input email\",\n          onChange: emailInput,\n          placeholder: \"Your email adress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `message ${isEmail ? 'success' : 'error'}`,\n            children: emailMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-text\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"pwInput\",\n          className: \"login-input password\",\n          onChange: passwordInput,\n          placeholder: \"Your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 140\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `message ${isPassword ? 'success' : 'error'}`,\n            children: passwordMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          type: \"button\",\n          onClick: login,\n          disabled: disabled,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginPage-text\",\n          children: \"Us Admin Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"Ki8STFmI9WXi3XMW33BrDBTxuLU=\");\n\n_c3 = Login;\nexport default Login;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"sources":["C:/project/us/frontend/src/admin/loginPage.jsx"],"names":["axios","React","useState","styled","defaults","withCredentials","LoginForm","div","emailDisable","passwordDisable","Form","Login","formRef","createRef","inputRef","email","setEmail","password","setPassword","emailMessage","setEmailMessage","passwordMessage","setPasswordMessage","isEmail","setIsEmail","isPassword","setIsPassword","emailInput","e","preventDefault","regExp","target","value","test","idDisabled","passwordInput","disabled","setDisabled","login","document","getElementById","idx","log","get","data","alert","window","location","href","length"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\naxios.defaults.withCredentials = true;\r\n\r\nconst LoginForm = styled.div`\r\n    .login-form{width: 35rem; position:absolute; top:50%; left:50%; transform: translate(-50%, -50%);}\r\n    .login_logo_box{text-align: center;}\r\n    .login-text{margin:0; margin-top: 2.7rem; margin-bottom: 1rem; font-size:1.6rem}\r\n    .login-input{width: calc(100% - 3.2rem); font-size: 1.4rem; padding: 1.5rem 1.4rem; border-radius: 15px; border:1.9px solid rgb(219, 219, 219); background: none;}\r\n    .login-input:focus{outline: none; border:1.9px solid rgb(53, 110, 156)}\r\n    .login-button{padding: 1.5rem 0; font-size: 1.4rem; font-weight: bolder; color: white; width: 100%; margin: 3.5rem 0 0; border-radius: 15px; border:0; background: #4fd1c5;}\r\n    .login-button:disabled{ background: #dfdfdf; }\r\n    .login_logo{width: 10rem;}\r\n    .loginPage-text{text-align:center; font-size:1.2rem; color:#8d8d8d;}\r\n    .text{ color: red; margin:0.5rem; font-size: 1.1rem; height: 1rem; }\r\n`;\r\n\r\nlet emailDisable = false;\r\nlet passwordDisable = false;\r\n\r\nconst Form = styled.div` background-color: rgb(248, 250, 252); height: 100%; position: fixed; width: 100%; overflow-y: auto;`;\r\n\r\nfunction Login(){\r\n    const formRef = React.createRef();\r\n    const inputRef = React.createRef();\r\n\r\n    //이메일, 비밀번호 확인\r\n    const [email, setEmail] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    //오류메시지 저장\r\n    const [emailMessage, setEmailMessage] = React.useState('')\r\n    const [passwordMessage, setPasswordMessage] = React.useState('')\r\n\r\n    //유효성 검사\r\n    const [isEmail, setIsEmail] = React.useState(false)\r\n    const [isPassword, setIsPassword] = React.useState(false)\r\n\r\n    //이메일\r\n    const emailInput = (e)=>{\r\n        e.preventDefault();\r\n        const regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/\r\n        const email = e.target.value;\r\n        setEmail(email)\r\n        if (!regExp.test(email)) {\r\n            setEmailMessage('* 이메일 형식에 맞게 입력해주세요')\r\n            setIsEmail(false)\r\n            emailDisable = false\r\n        } else {\r\n            setEmailMessage('')\r\n            setIsEmail(true)\r\n            emailDisable = true\r\n        }\r\n        idDisabled()\r\n    }\r\n\r\n    //비밀번호\r\n    const passwordInput = (e)=>{\r\n        e.preventDefault();\r\n        const regExp = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/\r\n        const password = e.target.value;\r\n        setPassword(password)\r\n        if (!regExp.test(password)) {\r\n            setPasswordMessage('* 비밀번호는 영어, 숫자, 특수문자 포함 8자 이상입니다.')\r\n            setIsPassword(false)\r\n            passwordDisable = false\r\n        } else {\r\n            setPasswordMessage('')\r\n            setIsPassword(true)\r\n            passwordDisable = true\r\n        }\r\n        idDisabled()\r\n    }\r\n    \r\n    const [ disabled, setDisabled ] = React.useState('disabled');\r\n\r\n    const idDisabled = () => {\r\n        if(emailDisable===true&&passwordDisable===true){\r\n            setDisabled('');\r\n        }else{\r\n            setDisabled('disabled');\r\n        }\r\n    }\r\n\r\n    const login = async () => {\r\n        let password = document.getElementById('pwInput');\r\n        let idx = document.getElementById('emailInput')\r\n        let log = await axios.get('http://localhost:3001/admin/login?email='+idx.value+\"&userPw=\"+password.value)\r\n        if(log.data===true){\r\n            alert('환영합니다')\r\n            window.location.href=\"/admin/main\"\r\n        }else{\r\n            alert('이메일/비밀번호를 확인하세요')\r\n            window.location.href=\"/admin\"\r\n        }\r\n    }\r\n    return (\r\n        <Form>\r\n        <LoginForm>\r\n            <form className=\"login-form\" ref={formRef}>\r\n                <div className='login_logo_box'><img src=\"/img/admin/us_logo.png\" className=\"login_logo\"/></div>\r\n                <p className='login-text'>이메일</p>\r\n                <input type=\"text\" id=\"emailInput\" className=\"login-input email\" onChange={emailInput} placeholder=\"Your email adress\"/>\r\n                <p className=\"text\">{email.length > 0 && <span className={`message ${isEmail ? 'success' : 'error'}`}>{emailMessage}</span>}</p>\r\n                <p className='login-text'>비밀번호</p>\r\n                <input type=\"password\" id=\"pwInput\" className=\"login-input password\" onChange={passwordInput} placeholder=\"Your password\"/><br/>\r\n                <p className=\"text\">{password.length > 0 && <span className={`message ${isPassword  ? 'success' : 'error'}`}>{passwordMessage}</span>}</p>\r\n                <button className=\"login-button\" type=\"button\" onClick={login} disabled={disabled}>로그인</button>\r\n                <p className=\"loginPage-text\">Us Admin Server</p>\r\n            </form>\r\n        </LoginForm>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}