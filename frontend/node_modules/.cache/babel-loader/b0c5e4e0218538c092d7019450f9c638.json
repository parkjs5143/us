{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\us\\\\frontend\\\\src\\\\UserComponents\\\\talk.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TalkWrap = styled.div`\n    z-index: 100; \n    position:fixed; \n    left:0; \n    top:0; \n    width:100%; \n    height:100%; \n    background:rgba(0,0,0,0.3);\n\n    input, textarea, button { padding: 0; outline: 0; border: 0; resize: none; border-radius: 0; -webkit-appearance: none; background-color: rgba(0,0,0,0); }\n    .talkBox { position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); background: #aee7e2; border:1px solid rgba(0,0,0,0.3s); width: 60rem; height: 70rem; }\n    .talkHeader { display: flex; align-items: center; padding: 2rem; background-color: rgb(0 0 0 / 8%); }\n    .recieverName { align-items: center; margin-left: 2rem; font-size: 2rem; font-weight: 600; color: rgba(54,54,54); }\n    .talkToggle{ margin-left: auto; margin-right: 1rem; position: relative; }\n    .talkToggle > img { width: 3rem; height: 2.7rem; cursor: pointer; }\n    .talkToggle > img:first-child { margin-right:1rem; }\n    .talkExitPop { position: absolute; width: max-content; top: 5rem; background-color: #fff; padding: .7rem 2.5rem; border:1px solid rgb(0 0 0 / 8%); cursor: pointer; display: none; }\n    .talkExitPop:hover { background-color: rgb(236, 236, 236);}\n    .talkProfileImg { width: 7rem; cursor: pointer; }\n    .talkList { overflow-y: scroll; padding: 2rem; padding-bottom: 0; height: 47rem; }\n    .reciverTalk { display: flex; align-items: flex-start; margin-bottom: 2rem; }\n    .talkContents .talkProfileImg { width: 6.5rem; }\n    .talkDetailWrap { margin-left: 1rem; max-width: 50%; margin-top: 1rem; }\n    .talkProfileName { margin-bottom: .5rem; font-weight: 600; }\n    .talkDetailList { margin-left: .5rem; background-color: #fff; padding: .7rem; border-radius: .5rem; word-break : break-all; line-height: 2.5rem; }\n    .senderTalk { display: flex; flex-direction: row-reverse; margin-bottom: 2rem; }\n    .talkSendWrap{ padding: 2rem; position: relative; background-color: #fff; }\n    .talkTextInput { height: 10rem; width: 90%; font-family: \"Nanum Gothic\", sans-serif; }\n    .talkSendBtn { display: inline-block; position: absolute; top: 2rem; right: 2rem; background-color: rgb(204, 204, 204); color: #fff; padding: .5rem .7rem; border: 1px solid rgb(0 0 0 / 10%); border-radius: 5px; cursor: pointer; }\n    .talkSendBtn:hover { box-shadow: rgb(0 0 0 / 20%) 2px 2px 2px; }\n    .talkSendBtn.active { color: #333; }\n`;\n_c = TalkWrap;\nlet socket;\n\nconst Talk = _ref => {\n  _s();\n\n  let {\n    current,\n    loginIdx\n  } = _ref;\n  const [img, setImg] = useState('');\n  const [name, setName] = useState('');\n  const [idx, setIdx] = useState('');\n  const [memberIdx, setMemberIdx] = useState('');\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [addOn, setAddOn] = useState(true); // const[cookie, setCookie] = useState('');\n\n  const ENDPORT = 'localhost:3001';\n  const searchElement = useRef(null); // DOM 요소를 searchElement에 할당\n\n  useEffect(() => {\n    console.log('current뽑기', current); // current 에서 받은 데이터 저장\n\n    const {\n      img,\n      name,\n      idx,\n      memberIdx,\n      title\n    } = current;\n\n    if (img == null || img == '') {\n      setImg('img/blank_profile.png');\n    } else setImg(img);\n\n    setName(name);\n    setIdx(idx);\n    setMemberIdx(memberIdx);\n    setTitle(title); // soket.io\n\n    socket = io(ENDPORT);\n    console.log(socket);\n    socket.on('connection', function () {\n      console.log('웹소켓 서버에 연결되었습니다.');\n    });\n    socket.emit('joinRoom', idx); // {idx:idx, name:name}\n\n    console.log(`${title} 방 입장`); // textarea focus 할당\n\n    if (searchElement.current) {\n      // 할당한 DOM 요소가 불러지면 (마운트 되면)\n      searchElement.current.focus(); // textarea에 focus 할당!\n    }\n\n    console.log('로그인Idx', loginIdx);\n  }, [current]); // 백에서 받아온 messase 처리\n\n  useEffect(() => {\n    socket.on('send', function (msg) {\n      console.log('백에서온거', JSON.stringify(msg));\n      setMessages([...messages, msg]);\n      console.log(messages);\n    });\n  }, [messages]); // sendBtn 클릭\n\n  const sendMsg = event => {\n    event.preventDefault();\n    console.log('왜또안나오니', loginIdx);\n    const data = document.querySelector('.talkTextInput').value;\n    const output = {\n      idx: idx,\n      memberIdx: loginIdx,\n      sender: name,\n      commend: 'chat',\n      type: 'text',\n      data: data,\n      roomName: title\n    };\n    console.log('프론트에서 보낼거', output);\n\n    if (socket == undefined) {\n      alert('서버에 연결되지 않았습니다. 서버를 연결하세요');\n      return;\n    }\n\n    socket.emit('message', output);\n\n    if (searchElement.current) {\n      // 할당한 DOM 요소가 불러지면 (마운트 되면)\n      searchElement.current.value = '';\n      searchElement.current.focus();\n    }\n  };\n\n  const closePop = () => {\n    setAddOn(false);\n    document.body.style.overflowY = \"unset\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: addOn ? /*#__PURE__*/_jsxDEV(TalkWrap, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"talkBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"talkHeader\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"talkProfileImgWrap\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"talkProfileImg\",\n              src: img,\n              alt: \"\\uD504\\uB85C\\uD544 \\uC0AC\\uC9C4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"recieverName\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"talkToggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"img/close_icon.svg\",\n              alt: \"\\uB098\\uAC00\\uAE30\",\n              onClick: closePop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"talkExitPop\",\n              children: \"\\uCC44\\uD305\\uBC29 \\uB098\\uAC00\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"talkContents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"talkList\",\n            children: /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n              children: messages.map((message, i) => {\n                let isSentByCurrentUser = false;\n                console.log(message);\n\n                if (message.memberIdx === loginIdx) {\n                  isSentByCurrentUser = true;\n                }\n\n                return isSentByCurrentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"senderTalk\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"talkDetailWrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"talkDetailList\",\n                      children: message.data\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"reciverTalk\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"talkProfileImgWrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"talkProfileImg\",\n                      src: img,\n                      alt: \"\\uD504\\uB85C\\uD544 \\uC0AC\\uC9C4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"talkDetailWrap\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"talkProfileName\",\n                      children: name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"talkDetailList\",\n                      children: message.data\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"talkSendWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: searchElement,\n              className: \"talkTextInput\",\n              onKeyPress: event => event.key === 'Enter' ? sendMsg(event) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"talkSendBtn\",\n              onClick: sendMsg,\n              children: \"\\uC804\\uC1A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Talk, \"aGBnn0b4FJ2dDYXPqlgD+pishDU=\");\n\n_c2 = Talk;\nexport default Talk;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TalkWrap\");\n$RefreshReg$(_c2, \"Talk\");","map":{"version":3,"sources":["C:/project/us/frontend/src/UserComponents/talk.jsx"],"names":["React","useEffect","useRef","useState","styled","Link","queryString","io","ScrollToBottom","TalkWrap","div","socket","Talk","current","loginIdx","img","setImg","name","setName","idx","setIdx","memberIdx","setMemberIdx","title","setTitle","message","setMessage","messages","setMessages","addOn","setAddOn","ENDPORT","searchElement","console","log","on","emit","focus","msg","JSON","stringify","sendMsg","event","preventDefault","data","document","querySelector","value","output","sender","commend","type","roomName","undefined","alert","closePop","body","style","overflowY","map","i","isSentByCurrentUser","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;;AAEA,MAAMC,QAAQ,GAAGL,MAAM,CAACM,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/BA;KAAMD,Q;AAiCN,IAAIE,MAAJ;;AAEA,MAAMC,IAAI,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAsB;AAChC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,IAAD,CAAlC,CARgC,CAShC;;AAEA,QAAM4B,OAAO,GAAG,gBAAhB;AAEA,QAAMC,aAAa,GAAG9B,MAAM,CAAC,IAAD,CAA5B,CAbgC,CAaI;;AAEpCD,EAAAA,SAAS,CAAC,MAAM;AACZgC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBrB,OAAxB,EADY,CAEZ;;AACA,UAAM;AAACE,MAAAA,GAAD;AAAME,MAAAA,IAAN;AAAYE,MAAAA,GAAZ;AAAiBE,MAAAA,SAAjB;AAA4BE,MAAAA;AAA5B,QAAqCV,OAA3C;;AACA,QAAGE,GAAG,IAAE,IAAL,IAAaA,GAAG,IAAE,EAArB,EAAwB;AACpBC,MAAAA,MAAM,CAAC,uBAAD,CAAN;AACH,KAFD,MAEOA,MAAM,CAACD,GAAD,CAAN;;AACPG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,MAAM,CAACD,GAAD,CAAN;AACAG,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,IAAAA,QAAQ,CAACD,KAAD,CAAR,CAVY,CAYZ;;AACAZ,IAAAA,MAAM,GAAGJ,EAAE,CAACwB,OAAD,CAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAZ;AACAA,IAAAA,MAAM,CAACwB,EAAP,CAAU,YAAV,EAAwB,YAAU;AAC9BF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEH,KAHD;AAIAvB,IAAAA,MAAM,CAACyB,IAAP,CAAY,UAAZ,EAAwBjB,GAAxB,EAnBY,CAmBoB;;AAChCc,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEX,KAAM,OAArB,EApBY,CAsBX;;AACD,QAAIS,aAAa,CAACnB,OAAlB,EAA2B;AAAE;AACzBmB,MAAAA,aAAa,CAACnB,OAAd,CAAsBwB,KAAtB,GADuB,CACQ;AAClC;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBpB,QAArB;AACH,GA3BQ,EA2BN,CAACD,OAAD,CA3BM,CAAT,CAfgC,CA4ChC;;AACAZ,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,MAAM,CAACwB,EAAP,CAAU,MAAV,EAAkB,UAASG,GAAT,EAAa;AAC3BL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBK,IAAI,CAACC,SAAL,CAAeF,GAAf,CAApB;AACAV,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcW,GAAd,CAAD,CAAX;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,KAJD;AAKH,GANQ,EAMN,CAACA,QAAD,CANM,CAAT,CA7CgC,CAqDhC;;AACA,QAAMc,OAAO,GAAIC,KAAD,IAAS;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBpB,QAArB;AAEA,UAAM8B,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCC,KAAtD;AACA,UAAMC,MAAM,GAAG;AAAC7B,MAAAA,GAAG,EAACA,GAAL;AAAUE,MAAAA,SAAS,EAAEP,QAArB;AAA+BmC,MAAAA,MAAM,EAAChC,IAAtC;AAA4CiC,MAAAA,OAAO,EAAC,MAApD;AAA4DC,MAAAA,IAAI,EAAC,MAAjE;AAAyEP,MAAAA,IAAI,EAACA,IAA9E;AAAoFQ,MAAAA,QAAQ,EAAG7B;AAA/F,KAAf;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBc,MAAxB;;AACA,QAAGrC,MAAM,IAAI0C,SAAb,EAAuB;AACnBC,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACA;AACH;;AACD3C,IAAAA,MAAM,CAACyB,IAAP,CAAY,SAAZ,EAAuBY,MAAvB;;AACA,QAAIhB,aAAa,CAACnB,OAAlB,EAA2B;AAAE;AACzBmB,MAAAA,aAAa,CAACnB,OAAd,CAAsBkC,KAAtB,GAA4B,EAA5B;AACAf,MAAAA,aAAa,CAACnB,OAAd,CAAsBwB,KAAtB;AACH;AACJ,GAhBD;;AAkBA,QAAMkB,QAAQ,GAAG,MAAM;AACnBzB,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAe,IAAAA,QAAQ,CAACW,IAAT,CAAcC,KAAd,CAAoBC,SAApB,GAAgC,OAAhC;AACH,GAHD;;AAKA,sBACI;AAAA,cACC7B,KAAK,gBACF,QAAC,QAAD;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAgC,cAAA,GAAG,EAAEd,GAArC;AAA0C,cAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA,sBAA8BQ;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCAEI;AAAK,cAAA,GAAG,EAAC,oBAAT;AAA8B,cAAA,GAAG,EAAC,oBAAlC;AAAwC,cAAA,OAAO,EAAEgC;AAAjD;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACI,QAAC,cAAD;AAAA,wBACK5B,QAAQ,CAACgC,GAAT,CAAa,CAAClC,OAAD,EAAUmC,CAAV,KAAc;AACxB,oBAAIC,mBAAmB,GAAG,KAA1B;AAEA5B,gBAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;;AACA,oBAAGA,OAAO,CAACJ,SAAR,KAAsBP,QAAzB,EAAkC;AAC9B+C,kBAAAA,mBAAmB,GAAG,IAAtB;AACH;;AAED,uBACIA,mBAAmB,gBACnB;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,gBAAf;AAAA,2CACI;AAAK,sBAAA,SAAS,EAAC,gBAAf;AAAA,gCAAiCpC,OAAO,CAACmB;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADmB,gBAQf;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,oBAAf;AAAA,2CACI;AAAK,sBAAA,SAAS,EAAC,gBAAf;AAAgC,sBAAA,GAAG,EAAE7B,GAArC;AAA0C,sBAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAK,oBAAA,SAAS,EAAC,gBAAf;AAAA,4CACI;AAAK,sBAAA,SAAS,EAAC,iBAAf;AAAA,gCAAkCE;AAAlC;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,sBAAA,SAAS,EAAC,gBAAf;AAAA,gCAAiCQ,OAAO,CAACmB;AAAzC;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATR;AAoBH,eA5BA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAkCI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAU,cAAA,GAAG,EAAEZ,aAAf;AAA8B,cAAA,SAAS,EAAC,eAAxC;AAAwD,cAAA,UAAU,EAAEU,KAAK,IAAIA,KAAK,CAACoB,GAAN,KAAc,OAAd,GAAwBrB,OAAO,CAACC,KAAD,CAA/B,GAAyC;AAAtH;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAgC,cAAA,OAAO,EAAED,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADE,GAuDF;AAxDJ,mBADJ;AA4DH,CAzID;;GAAM7B,I;;MAAAA,I;AA2IN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst TalkWrap = styled.div`\r\n    z-index: 100; \r\n    position:fixed; \r\n    left:0; \r\n    top:0; \r\n    width:100%; \r\n    height:100%; \r\n    background:rgba(0,0,0,0.3);\r\n\r\n    input, textarea, button { padding: 0; outline: 0; border: 0; resize: none; border-radius: 0; -webkit-appearance: none; background-color: rgba(0,0,0,0); }\r\n    .talkBox { position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); background: #aee7e2; border:1px solid rgba(0,0,0,0.3s); width: 60rem; height: 70rem; }\r\n    .talkHeader { display: flex; align-items: center; padding: 2rem; background-color: rgb(0 0 0 / 8%); }\r\n    .recieverName { align-items: center; margin-left: 2rem; font-size: 2rem; font-weight: 600; color: rgba(54,54,54); }\r\n    .talkToggle{ margin-left: auto; margin-right: 1rem; position: relative; }\r\n    .talkToggle > img { width: 3rem; height: 2.7rem; cursor: pointer; }\r\n    .talkToggle > img:first-child { margin-right:1rem; }\r\n    .talkExitPop { position: absolute; width: max-content; top: 5rem; background-color: #fff; padding: .7rem 2.5rem; border:1px solid rgb(0 0 0 / 8%); cursor: pointer; display: none; }\r\n    .talkExitPop:hover { background-color: rgb(236, 236, 236);}\r\n    .talkProfileImg { width: 7rem; cursor: pointer; }\r\n    .talkList { overflow-y: scroll; padding: 2rem; padding-bottom: 0; height: 47rem; }\r\n    .reciverTalk { display: flex; align-items: flex-start; margin-bottom: 2rem; }\r\n    .talkContents .talkProfileImg { width: 6.5rem; }\r\n    .talkDetailWrap { margin-left: 1rem; max-width: 50%; margin-top: 1rem; }\r\n    .talkProfileName { margin-bottom: .5rem; font-weight: 600; }\r\n    .talkDetailList { margin-left: .5rem; background-color: #fff; padding: .7rem; border-radius: .5rem; word-break : break-all; line-height: 2.5rem; }\r\n    .senderTalk { display: flex; flex-direction: row-reverse; margin-bottom: 2rem; }\r\n    .talkSendWrap{ padding: 2rem; position: relative; background-color: #fff; }\r\n    .talkTextInput { height: 10rem; width: 90%; font-family: \"Nanum Gothic\", sans-serif; }\r\n    .talkSendBtn { display: inline-block; position: absolute; top: 2rem; right: 2rem; background-color: rgb(204, 204, 204); color: #fff; padding: .5rem .7rem; border: 1px solid rgb(0 0 0 / 10%); border-radius: 5px; cursor: pointer; }\r\n    .talkSendBtn:hover { box-shadow: rgb(0 0 0 / 20%) 2px 2px 2px; }\r\n    .talkSendBtn.active { color: #333; }\r\n`;\r\n\r\nlet socket;\r\n\r\nconst Talk = ({current, loginIdx})=>{\r\n    const [img, setImg] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [idx, setIdx] = useState('');\r\n    const [memberIdx, setMemberIdx] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [addOn, setAddOn] = useState(true);\r\n    // const[cookie, setCookie] = useState('');\r\n\r\n    const ENDPORT = 'localhost:3001';\r\n    \r\n    const searchElement = useRef(null); // DOM 요소를 searchElement에 할당\r\n    \r\n    useEffect(() => {\r\n        console.log('current뽑기',current);\r\n        // current 에서 받은 데이터 저장\r\n        const {img, name, idx, memberIdx, title} = current;\r\n        if(img==null || img==''){\r\n            setImg('img/blank_profile.png');\r\n        } else setImg(img);\r\n        setName(name);\r\n        setIdx(idx);\r\n        setMemberIdx(memberIdx);\r\n        setTitle(title);\r\n\r\n        // soket.io\r\n        socket = io(ENDPORT);\r\n        console.log(socket);\r\n        socket.on('connection', function(){\r\n            console.log('웹소켓 서버에 연결되었습니다.');\r\n            \r\n        });\r\n        socket.emit('joinRoom', idx);   // {idx:idx, name:name}\r\n        console.log(`${title} 방 입장`)\r\n\r\n         // textarea focus 할당\r\n        if (searchElement.current) { // 할당한 DOM 요소가 불러지면 (마운트 되면)\r\n            searchElement.current.focus(); // textarea에 focus 할당!\r\n        }\r\n        console.log('로그인Idx',loginIdx);\r\n    }, [current]);\r\n\r\n    // 백에서 받아온 messase 처리\r\n    useEffect(()=>{\r\n        socket.on('send', function(msg){\r\n            console.log('백에서온거',JSON.stringify(msg));\r\n            setMessages([...messages, msg]);\r\n            console.log(messages);\r\n        })\r\n    }, [messages]);\r\n\r\n    // sendBtn 클릭\r\n    const sendMsg = (event)=>{\r\n        event.preventDefault();\r\n        console.log('왜또안나오니',loginIdx);\r\n\r\n        const data = document.querySelector('.talkTextInput').value;\r\n        const output = {idx:idx, memberIdx: loginIdx, sender:name, commend:'chat', type:'text', data:data, roomName : title};\r\n        console.log('프론트에서 보낼거',output);\r\n        if(socket == undefined){\r\n            alert('서버에 연결되지 않았습니다. 서버를 연결하세요');\r\n            return;\r\n        }\r\n        socket.emit('message', output);\r\n        if (searchElement.current) { // 할당한 DOM 요소가 불러지면 (마운트 되면)\r\n            searchElement.current.value='';\r\n            searchElement.current.focus();\r\n        }\r\n    }\r\n\r\n    const closePop = () => {\r\n        setAddOn(false);\r\n        document.body.style.overflowY = \"unset\";\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {addOn ? (\r\n            <TalkWrap>\r\n            <div className=\"talkBox\">\r\n                <div className='talkHeader'>\r\n                    <div className='talkProfileImgWrap'>\r\n                        <img className='talkProfileImg' src={img} alt='프로필 사진'/>\r\n                    </div>\r\n                    <h2 className='recieverName'>{title}</h2>\r\n                    <div className='talkToggle'>\r\n                        {/* <img src='img/talk_toggle.svg' alt='메뉴'></img> */}\r\n                        <img src='img/close_icon.svg' alt='나가기' onClick={closePop}></img>\r\n                        <div className='talkExitPop'>채팅방 나가기</div>\r\n                    </div>\r\n                </div>\r\n                <div className='talkContents'>\r\n                    <div className='talkList'>\r\n                        <ScrollToBottom>\r\n                            {messages.map((message, i)=>{\r\n                                let isSentByCurrentUser = false;\r\n\r\n                                console.log(message);\r\n                                if(message.memberIdx === loginIdx){\r\n                                    isSentByCurrentUser = true;\r\n                                }\r\n\r\n                                return (\r\n                                    isSentByCurrentUser ? (\r\n                                    <div className='senderTalk'>\r\n                                        <div className='talkDetailWrap'>\r\n                                            <div className='talkDetailList'>{message.data}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    )\r\n                                    : (\r\n                                        <div className='reciverTalk'>\r\n                                            <div className='talkProfileImgWrap'>\r\n                                                <img className='talkProfileImg' src={img} alt='프로필 사진'></img>\r\n                                            </div>\r\n                                            <div className='talkDetailWrap'>\r\n                                                <div className='talkProfileName'>{name}</div>\r\n                                                <div className='talkDetailList'>{message.data}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                )\r\n                            })}\r\n                        </ScrollToBottom>\r\n                    </div>\r\n                    <div className='talkSendWrap'>\r\n                        <textarea ref={searchElement} className='talkTextInput' onKeyPress={event => event.key === 'Enter' ? sendMsg(event) : null}></textarea>\r\n                        <button className='talkSendBtn' onClick={sendMsg}>전송</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </TalkWrap>\r\n        ) : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Talk;"]},"metadata":{},"sourceType":"module"}