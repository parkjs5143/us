{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\us\\\\frontend\\\\src\\\\UserComponents\\\\loginMap.jsx\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginMap = () => {\n  _s();\n\n  const {\n    kakao\n  } = window;\n  const [myPosition, setMyPosition] = useState([]); // 내 위치 불러오기\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      // GPS를 지원하면\n      navigator.geolocation.getCurrentPosition(function (position) {\n        // alert(position.coords.latitude + ' ' + position.coords.longitude);\n        setMyPosition(position.coords);\n      }, function (error) {\n        console.error(error);\n      }, {\n        enableHighAccuracy: true,\n        maximumAge: 0,\n        timeout: Infinity\n      });\n    } else {\n      alert('GPS를 지원하지 않습니다');\n    }\n  }\n\n  getLocation();\n  console.log(myPosition);\n  useEffect(() => {\n    // 지도 활성화\n    var container = document.getElementById('map');\n    var options = {\n      center: new kakao.maps.LatLng(myPosition.latitude, myPosition.longitude),\n      level: 3\n    };\n    var map = new kakao.maps.Map(container, options); // 마커 표시\n\n    var markerPosition = new kakao.maps.LatLng(myPosition.latitude, myPosition.longitude);\n    var marker = new kakao.maps.Marker({\n      map: map,\n      position: markerPosition,\n      title: \"Seongnam, Korea\",\n      clickable: true // 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다\n\n    });\n    marker.setMap(map); // 지도에 컨트롤 추가\n\n    var control = new kakao.maps.ZoomControl();\n    map.addControl(control, kakao.maps.ControlPosition.TOPRIGHT);\n  }, [myPosition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"600px\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginMap, \"c7kdrYJlPfh9a2yJWpSXC2hVgGs=\");\n\n_c = LoginMap;\nexport default LoginMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginMap\");","map":{"version":3,"sources":["C:/project/us/frontend/src/UserComponents/loginMap.jsx"],"names":["React","useEffect","useState","LoginMap","kakao","window","myPosition","setMyPosition","getLocation","navigator","geolocation","getCurrentPosition","position","coords","error","console","enableHighAccuracy","maximumAge","timeout","Infinity","alert","log","container","document","getElementById","options","center","maps","LatLng","latitude","longitude","level","map","Map","markerPosition","marker","Marker","title","clickable","setMap","control","ZoomControl","addControl","ControlPosition","TOPRIGHT","width","height"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAC,MAAI;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAYC,MAAlB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C,CAFe,CAIf;;AACA,WAASM,WAAT,GAAuB;AACnB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AAAE;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AACxD;AACAL,QAAAA,aAAa,CAACK,QAAQ,CAACC,MAAV,CAAb;AACH,OAHD,EAGG,UAASC,KAAT,EAAgB;AACfC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,OALD,EAKG;AACCE,QAAAA,kBAAkB,EAAE,IADrB;AAECC,QAAAA,UAAU,EAAE,CAFb;AAGCC,QAAAA,OAAO,EAAEC;AAHV,OALH;AAUH,KAXD,MAWO;AACHC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;AACJ;;AACDZ,EAAAA,WAAW;AACXO,EAAAA,OAAO,CAACM,GAAR,CAAYf,UAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAI;AAEV;AACA,QAAIqB,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAhB;AACA,QAAIC,OAAO,GAAG;AACVC,MAAAA,MAAM,EAAE,IAAItB,KAAK,CAACuB,IAAN,CAAWC,MAAf,CAAsBtB,UAAU,CAACuB,QAAjC,EAA2CvB,UAAU,CAACwB,SAAtD,CADE;AAEVC,MAAAA,KAAK,EAAE;AAFG,KAAd;AAIA,QAAIC,GAAG,GAAG,IAAI5B,KAAK,CAACuB,IAAN,CAAWM,GAAf,CAAmBX,SAAnB,EAA8BG,OAA9B,CAAV,CARU,CAUV;;AACA,QAAIS,cAAc,GAAI,IAAI9B,KAAK,CAACuB,IAAN,CAAWC,MAAf,CAAsBtB,UAAU,CAACuB,QAAjC,EAA2CvB,UAAU,CAACwB,SAAtD,CAAtB;AACA,QAAIK,MAAM,GAAG,IAAI/B,KAAK,CAACuB,IAAN,CAAWS,MAAf,CAAsB;AAC/BJ,MAAAA,GAAG,EAAEA,GAD0B;AAE/BpB,MAAAA,QAAQ,EAAEsB,cAFqB;AAG/BG,MAAAA,KAAK,EAAG,iBAHuB;AAI/BC,MAAAA,SAAS,EAAE,IAJoB,CAIf;;AAJe,KAAtB,CAAb;AAMAH,IAAAA,MAAM,CAACI,MAAP,CAAcP,GAAd,EAlBU,CAoBV;;AACA,QAAIQ,OAAO,GAAG,IAAIpC,KAAK,CAACuB,IAAN,CAAWc,WAAf,EAAd;AACAT,IAAAA,GAAG,CAACU,UAAJ,CAAeF,OAAf,EAAwBpC,KAAK,CAACuB,IAAN,CAAWgB,eAAX,CAA2BC,QAAnD;AAEH,GAxBQ,EAwBN,CAACtC,UAAD,CAxBM,CAAT;AA0BA,sBACI;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,KAAK,EAAE;AAACuC,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,MAAM,EAAC;AAAvB;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvDD;;GAAM3C,Q;;KAAAA,Q;AAyDN,eAAeA,QAAf","sourcesContent":["/*global kakao*/ \r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst LoginMap=()=>{\r\n    const { kakao } = window;\r\n    const [myPosition, setMyPosition] = useState([]);\r\n    \r\n    // 내 위치 불러오기\r\n    function getLocation() {\r\n        if (navigator.geolocation) { // GPS를 지원하면\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                // alert(position.coords.latitude + ' ' + position.coords.longitude);\r\n                setMyPosition(position.coords);\r\n            }, function(error) {\r\n                console.error(error);\r\n            }, {\r\n                enableHighAccuracy: true,\r\n                maximumAge: 0,\r\n                timeout: Infinity\r\n            });\r\n        } else {\r\n            alert('GPS를 지원하지 않습니다');\r\n        }\r\n    }\r\n    getLocation();\r\n    console.log(myPosition);\r\n\r\n    useEffect(()=>{\r\n        \r\n        // 지도 활성화\r\n        var container = document.getElementById('map');\r\n        var options = {\r\n            center: new kakao.maps.LatLng(myPosition.latitude, myPosition.longitude),\r\n            level: 3\r\n        };\r\n        var map = new kakao.maps.Map(container, options);\r\n\r\n        // 마커 표시\r\n        var markerPosition  = new kakao.maps.LatLng(myPosition.latitude, myPosition.longitude); \r\n        var marker = new kakao.maps.Marker({\r\n            map: map,\r\n            position: markerPosition,\r\n            title : \"Seongnam, Korea\",\r\n            clickable: true // 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다\r\n        });\r\n        marker.setMap(map);\r\n        \r\n        // 지도에 컨트롤 추가\r\n        var control = new kakao.maps.ZoomControl();\r\n        map.addControl(control, kakao.maps.ControlPosition.TOPRIGHT); \r\n\r\n    }, [myPosition])\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"map\" style={{width:\"600px\", height:\"400px\"}}></div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginMap;"]},"metadata":{},"sourceType":"module"}